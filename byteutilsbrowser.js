// Generated by CoffeeScript 2.5.1
(function() {
  var bufferToBigInt, bufferToHexBrowser, bufferToUtf8, byteToHex, byteutilsbrowser, hexToBufferBrowser, utf8ToBufferBrowser;

  byteutilsbrowser = {};

  //###########################################################
  byteToHex = function(byte) {
    byte = byte & 0xFF;
    return byte.toString(16).padStart(2, '0');
  };

  //###########################################################
  bufferToBigInt = function(byteBuffer) {
    var byte, i, j, len, value;
    byteBuffer = new Uint8Array(byteBuffer);
    value = 0n;
    for (i = j = 0, len = byteBuffer.length; j < len; i = ++j) {
      byte = byteBuffer[i];
      value += BigInt(byte) << (8n * BigInt(i));
    }
    return value;
  };

  //###########################################################
  bufferToUtf8 = function(byteBuffer) {
    var byteArray;
    byteArray = new Uint8Array(byteBuffer);
    return String.fromCharCode.apply(null, byteArray);
  };

  utf8ToBufferBrowser = function(utf8) {
    var bytes;
    bytes = (new TextEncoder()).encode(utf8);
    return bytes.buffer;
  };

  //###########################################################
  bufferToHexBrowser = function(byteBuffer) {
    var byteArray;
    byteArray = new Uint8Array(byteBuffer);
    return Array.prototype.map.call(byteArray, byteToHex).join("");
  };

  hexToBufferBrowser = function(hex) {
    var i, j, ref, result;
    result = new Uint8Array(hex.length / 2);
    for (i = j = 0, ref = hex.length; j < ref; i = j += 2) {
      result[i / 2] = parseInt(hex.substr(i, 2), 16);
    }
    return result.buffer;
  };

  
  //###########################################################
  byteutilsbrowser.bufferToBigInt = bufferToBigInt;

  byteutilsbrowser.bytesToBigInt = bufferToBigInt;

  byteutilsbrowser.bufferToUtf8 = bufferToUtf8;

  byteutilsbrowser.bytesToUtf8 = bufferToUtf8;

  byteutilsbrowser.utf8ToBuffer = utf8ToBufferBrowser;

  byteutilsbrowser.utf8ToBytes = utf8ToBufferBrowser;

  byteutilsbrowser.bufferToHex = bufferToHexBrowser;

  byteutilsbrowser.bytesToHex = bufferToHexBrowser;

  byteutilsbrowser.hexToBuffer = hexToBufferBrowser;

  byteutilsbrowser.hexToBytes = hexToBufferBrowser;

  module.exports = byteutilsbrowser;

}).call(this);
