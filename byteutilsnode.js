// Generated by CoffeeScript 2.5.1
(function() {
  var bufferToBigInt, bufferToHexNode, bufferToUtf8, byteToHex, byteutilsnode, hexToBufferNode, utf8ToBufferNode;

  byteutilsnode = {};

  //###########################################################
  byteToHex = function(byte) {
    byte = byte & 0xFF;
    return byte.toString(16).padStart(2, '0');
  };

  //###########################################################
  bufferToBigInt = function(byteBuffer) {
    var byte, i, j, len, value;
    byteBuffer = new Uint8Array(byteBuffer);
    value = 0n;
    for (i = j = 0, len = byteBuffer.length; j < len; i = ++j) {
      byte = byteBuffer[i];
      value += BigInt(byte) << (8n * BigInt(i));
    }
    return value;
  };

  //###########################################################
  bufferToUtf8 = function(byteBuffer) {
    var byteArray;
    byteArray = new Uint8Array(byteBuffer);
    return String.fromCharCode.apply(null, byteArray);
  };

  utf8ToBufferNode = function(utf8) {
    return Buffer.from(utf8, "utf8");
  };

  //###########################################################
  bufferToHexNode = function(byteBuffer) {
    return Buffer.from(byteBuffer).toString("hex");
  };

  hexToBufferNode = function(hex) {
    return Buffer.from(hex, 'hex');
  };

  
  //###########################################################
  byteutilsnode.bufferToBigInt = bufferToBigInt;

  byteutilsnode.bytesToBigInt = bufferToBigInt;

  byteutilsnode.bufferToUtf8 = bufferToUtf8;

  byteutilsnode.bytesToUtf8 = bufferToUtf8;

  byteutilsnode.utf8ToBuffer = utf8ToBufferNode;

  byteutilsnode.utf8ToBytes = utf8ToBufferNode;

  byteutilsnode.bufferToHex = bufferToHexNode;

  byteutilsnode.bytesToHex = bufferToHexNode;

  byteutilsnode.hexToBuffer = hexToBufferNode;

  byteutilsnode.hexToBytes = hexToBufferNode;

  module.exports = byteutilsnode;

}).call(this);
